-- Leia a seção: "Initializing a fresh instance" em https://hub.docker.com/_/mysql

"When a container is started for the first time, a new database with the specified name will be
created and initialized with the provided configuration variables.
Furthermore, it will execute files with extensions .sh, .sql and .sql.gz that are found in /docker-entrypoint-initdb.d.
Files will be executed in alphabetical order. You can easily populate your mysql services by
mounting a SQL dump into that directory and provide custom images with contributed data. SQL files
will be imported by default to the database specified by the MYSQL_DATABASE variable."

Ou seja, script init.sql será executado para inicializar o banco de dados já criado pelo Docker Compose,
incluindo os dados iniciais. No entanto, é importante lembrar que, como o banco de dados e seus
dados serão armazenados em um volume do Docker, o init.sql será aplicado *apenas na primeira vez* em
que o container for criado.

Se o container inicial for removido e um novo container for criado posteriormente, o banco de dados
permanecerá no volume com os dados anteriores, sem que o init.sql seja executado novamente e
sobrescreva as informações existentes.

Caso seja necessário executar o init.sql outra vez (por exemplo, para reiniciar o banco de dados do
zero), será preciso remover o volume (usando docker volume rm <nome_volume>) e permitir que o Docker
Compose crie um novo volume limpo.